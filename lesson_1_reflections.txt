How did viewing a diff between two versions of a file help you see the bug that
was introduced?

    It was easier to see a side-by-side comparisons in a presentable way. 

How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

    It would allow me to see the various versions and why someone may have changed code that they thought might improve the program. It would also allow me to gain a better understanding of some of the logic used within the program. It would also allow me to see where bugs may have been introduced inadvertantenly into the code, thus learning from the mistakes of myslef or another programmer.

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    That allows for a clearer timeline on the changes. Especially with ever evolving programs it paints a much better picture of the reasoning behind the programming and coding.

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Since programs and web applications are built using many different files it would be best to see all multiple file changes at once as they affect the program.

How can you use the commands git log and git diff to view the history of files?

    You could use the command git log to have a list of files and then use that log to compare whatever files you would need to then make changes

How might using version control make you more confident to make changes that
could break something?

    Using version control, I know I could always have a backup to any changes I made. Therefore I could write more code and if anything broke, I could compare that code. If anything broke, or there was a typo it would make for a much easier time to evaluate using diff

Now that you have your workspace set up, what do you want to try using Git for?

    I want to use it for building my personal portfolio and other creative projects.

How could having easy access to the entire history of a file make you a more efficient programmer in the long term?

	It would make me a more efficient programmer because I would be able
to see how bugs may have arose to the program, as well as look for fixes to a future problem. 

What do you think are the pros and cons of manually choosing when to create a commit, like you do in Git, vs having versions automatically saved, like Google Docs does?
	The pros of manually choosing offers more flexibility and control in the way the logic is saved. The cons are that it is not updated after every exact change.
	The pros of having versions automatically saved is that you will not lose any work. The cons are that you have too many versions after every change.

Why do you think some version control systems, like Git, allow saving multiple files in one commit, while others, like Google Docs, treat each file separately?
	Because in code there are many files that can create programs, so it's important to track each file 
	Google docs is primarily used for writing and docs are usually independent of one another.

How can you use the commands git log and git diff to view the history of files?
	You can use the these commands to see the changes made to and compare any changes to one another

How might using version control make you more confident to make changes that could break something?
	I think using version control would make me more confident to make changes because I know there is always a backup so I have more flexibility and control when coding. It allows to explore deep concepts more easily	


This is just another update























