How is the staging area different from the working directory and the repository? What value do you think it offers?
	The staging area allows you to have more flexibility than you normally would without the staging area. It allows you to make more changes before committing to the live area.

How can you use the staging area to make sure you have one commit per logical change?
	To test the status of any changes made. You can also use gif diff to check the difference between the last commit and what is in the staging area.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
	Branches would be helpful when wanting to experiment with different versions of the code. The branches could be variations of the code and then additional branches could be code off the initial experimentation. You could easily have a visual representation for the various projects.

How do the diagrams help you visualize the branch structure?
	The diagrams help you visualize where in the history the branches relate to the master files and other files. 

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
	The result of merging two branches together is so that we can add changes to the master while keeping both repositories

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?
	The pros of Git's automatic merging is that it adds all the code from two branches, however the manual benefit is that you have more control over the code which could be handy when collaborating with others.